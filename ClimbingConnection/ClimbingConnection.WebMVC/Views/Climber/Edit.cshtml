@model ClimbingCommunity.Models.ClimberModels.ClimberEdit

@{
    ViewBag.Title = "Edit";
}

<h2 class="display-4 greentext">Edit Profile</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    <hr class="bg-dark" />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ClimberId)

    <div class="form-group">
        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GymId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                var selectList = new List<SelectListItem>();

                foreach (var item in ViewBag.gymList)
                {
                    selectList.Add(new SelectListItem { Text = item.Name, Value = item.GymId.ToString() });
                }

            }
            @Html.DropDownListFor(model => model.GymId, selectList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.GymId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-outline-secondary greentext" id="nopadding" />
            
        </div>
        
    </div>
    <hr class="bg-dark" />
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class="btn btn-outline-secondary"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
