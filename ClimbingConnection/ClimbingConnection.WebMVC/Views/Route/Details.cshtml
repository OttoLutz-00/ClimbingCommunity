@model ClimbingCommunity.Models.RouteModels.RouteListItem

@{
    ViewBag.Title = "Details";
}
<div>
    <p class="d-inline display-2 greentext">@Model.Name </p>
    <p class="d-inline display-3"> V @Model.Grade</p>
</div>

<div>
    @if (Model.IsOnWall == true)
    {
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#9FFF1C" class="bi bi-check-circle-fill mb-2" viewBox="0 0 16 16">
            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
        </svg>
        <p class="d-inline" style="font-size: x-large;">Currently set route at </p>
    }
    else
    {
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#FF443E" class="bi bi-x-circle-fill mb-2" viewBox="0 0 16 16">
            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z" />
        </svg>
        <p class="d-inline" style="font-size: x-large;">Previously set route at </p>
    }
    <p class="d-inline greentext" style="font-size: x-large;">@Html.DisplayFor(model => model.GymName)</p>
</div>

<div>

    <hr / class="bg-dark">



    <p class="" style="font-size: x-large">
        · @Html.DisplayFor(model => model.Description)
    </p>







    <div>
        <p class="d-inline" style="font-size: x-large">Set by </p>
        <p class="d-inline greentext" style="font-size: x-large">@Html.DisplayFor(model => model.ClimberUsername)</p>
    </div>

    <div>
        <p class="d-inline" style="font-size: x-large">Set on </p>
        <p class="d-inline greentext" style="font-size: x-large">@Html.DisplayFor(model => model.DateSet)</p>
    </div>

    <div class="mb-3">
        <p class="d-inline greentext" style="font-size: x-large">@Html.DisplayFor(model => model.TotalSends)</p>
        <p class="d-inline" style="font-size: x-large">total sends </p>
    </div>
</div>

<div class="d-flex justify-content-around">

    @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class="btn btn-outline-secondary rounded-pill", id="nopadding", style = "padding: 3rem!important; font-size: x-large!important;" })
@if (Model.ClimberId == (int)TempData.Peek("CurrentClimberId"))
{
    @Html.ActionLink("Edit Route", "Edit", new { id = Model.RouteId }, htmlAttributes: new { @class="btn btn-outline-primary rounded-pill", style = "padding: 3rem!important; font-size: x-large!important;" })
}

    @Html.ActionLink("Log Send on This Route", "Create", "Send",null, htmlAttributes: new { @class = "btn btn-outline-secondary greentext rounded-pill", id = "nopadding", style= "padding: 3rem!important; font-size: x-large!important;" })


</div>
