@model ClimbingCommunity.Models.RouteModels.RouteListItem

@{
    ViewBag.Title = "Details";
}
<div>
    <p class="d-inline display-2 greentext">@Model.Name </p>
    <p class="d-inline display-3"> V @Model.Grade</p>
</div>

<div>
    @if (Model.IsOnWall == true)
    {
        <p class="d-inline" style="font-size: x-large;">Currently set route at </p>
    }
    else
    {
        <p class="d-inline" style="font-size: x-large;">Previously set route at </p>
    }
    <p class="d-inline greentext" style="font-size: x-large;">@Html.DisplayFor(model => model.GymName)</p>
</div>

<div>

    <hr / class="bg-dark">



    <p class="" style="font-size: x-large">
        · @Html.DisplayFor(model => model.Description)
    </p>







    <div>
        <p class="d-inline" style="font-size: x-large">Set by </p>
        <p class="d-inline greentext" style="font-size: x-large">@Html.DisplayFor(model => model.ClimberUsername)</p>
    </div>

    <div>
        <p class="d-inline" style="font-size: x-large">Set on </p>
        <p class="d-inline greentext" style="font-size: x-large">@Html.DisplayFor(model => model.DateSet)</p>
    </div>

    <div>
        <p class="d-inline greentext" style="font-size: x-large">@Html.DisplayFor(model => model.TotalSends)</p>
        <p class="d-inline" style="font-size: x-large">total sends </p>
    </div>
</div>
<p>@if (Model.ClimberId == (int)TempData.Peek("CurrentClimberId"))
{
    @Html.ActionLink("Edit", "Edit", new { id = Model.RouteId }, htmlAttributes: new { @class="btn btn-outline-primary"})
}
    @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class="btn btn-outline-secondary", id="nopadding"})

    @Html.ActionLink("Log Send on This Route", "Create", "Send", htmlAttributes: new { @class = "btn btn-outline-secondary greentext", id = "nopadding" })
</p>
